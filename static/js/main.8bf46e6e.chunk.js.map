{"version":3,"sources":["components/FeedBackOptions/FeedbackOptions.module.css","components/Statistic/Statistic.module.css","components/Statistics/Statistics.module.css","components/Notification/Notifications.module.css","components/FeedBackOptions/FeedBackOptions.js","components/Statistic/Statistic.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","FeedBackOptions","options","onLeaveFeedback","good","neutral","bad","className","Styles","btnTitle","btnBox","type","name","value","button","onClick","Statistic","label","Style","text","Section","children","Statistics","total","positivePercentage","statisticsBoxTitle","statList","Notifications","message","styles","notify","App","state","countTotalFeedback","Object","values","reduce","el","handleLeaveFeedback","e","target","setState","prevState","countPositiveFeedbackPercentage","this","percentagePositiveFeedback","Math","floor","Number","Notification","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8bf46e6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnBox\":\"FeedbackOptions_btnBox__1W6_Z\",\"btnTitle\":\"FeedbackOptions_btnTitle__1ic0F\",\"button\":\"FeedbackOptions_button__24J8c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistic_text__27rFp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__2pjiJ\",\"statisticsBoxTitle\":\"Statistics_statisticsBoxTitle__TU6zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notify\":\"Notifications_notify__A18yv\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedBackOptions = ({ options, onLeaveFeedback }) => {\r\n  const { good, neutral, bad } = options;\r\n  return (\r\n    <div>\r\n      <span className={Styles.btnTitle}>Please leave feedback</span>\r\n      <div className={Styles.btnBox}>\r\n      <button\r\n        type=\"button\"\r\n        name=\"good\"\r\n        value={good}\r\n        className={Styles.button}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        value={neutral}\r\n        className={Styles.button}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"bad\"\r\n        value={bad}\r\n        className={Styles.button}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Bad\r\n      </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedBackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedBackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Style from '../Statistic/Statistic.module.css';\r\n\r\nconst Statistic = ({ value, label }) => (\r\n  <>\r\n    {label === 'Positive feedback' ? (\r\n      <p className={Style.text}>\r\n        {label}: {value}%\r\n      </p>\r\n    ) : (\r\n      <p className={Style.text}>\r\n        {label}: {value}\r\n      </p>\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistic.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistic;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children }) => <li className=\"Item\">{children}</li>;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistic from '../Statistic/Statistic';\r\nimport Section from '../Section/Section';\r\nimport Styles from './Statistics.module.css';\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <span className={Styles.statisticsBoxTitle} >Statistics</span>\r\n    <ul className={Styles.statList}>\r\n      <Section>\r\n        <Statistic label=\"Good\" value={good} />\r\n      </Section>\r\n      <Section>\r\n        <Statistic label=\"Neutral\" value={neutral} />\r\n      </Section>\r\n      <Section>\r\n        <Statistic label=\"Bad\" value={bad} />\r\n      </Section>\r\n      <Section>\r\n        <Statistic label=\"Total\" value={total} />\r\n      </Section>\r\n      <Section>\r\n        <Statistic label=\"Positive feedback\" value={positivePercentage} />\r\n      </Section>\r\n    </ul>\r\n  </div>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notifications.module.css';\r\n\r\nconst Notifications = ({ message }) => (\r\n  <div className={styles.notify}>{message}</div>\r\n);\r\nNotifications.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notifications;","import React, { Component } from 'react';\r\nimport FeedBackOptions from './FeedBackOptions/FeedBackOptions';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Notification from './Notification/Notification';\r\n\r\n\r\nexport default class App extends Component {\r\n  state = { good: 0,\r\n            neutral: 0,\r\n            bad: 0, };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((total, el) => total + el, 0);\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const { good } = this.state;\r\n    const percentagePositiveFeedback = `${Math.floor(\r\n      (good / this.countTotalFeedback()) * 100,\r\n    )}`;\r\n    return Number (percentagePositiveFeedback);\r\n  }\r\n\r\n\r\nhandleLeaveFeedback = e =>  {\r\n  const { name } = e.target;\r\n\r\n  this.setState(prevState => ({\r\n    [name]: prevState[name] + 1,\r\n  }));\r\n  this.countTotalFeedback();\r\n  this.countPositiveFeedbackPercentage();\r\n};\r\n\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return ( \r\n      <div>\r\n       <FeedBackOptions\r\n          options={this.state}\r\n          onLeaveFeedback={this.handleLeaveFeedback}\r\n        />\r\n        {good > 0 || neutral > 0 || bad > 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n    </div>\r\n      );  \r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n\n\n\n"],"sourceRoot":""}